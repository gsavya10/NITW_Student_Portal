# Generated by Django 2.1.2 on 2019-01-22 12:51

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Allow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_number', models.CharField(max_length=16)),
                ('reason', models.CharField(max_length=500)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'allow',
            },
        ),
        migrations.CreateModel(
            name='AllowExit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_number', models.CharField(max_length=16)),
                ('reason', models.CharField(max_length=256)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'allow_exit',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cfid', models.IntegerField(blank=True, null=True)),
                ('comment_type', models.PositiveSmallIntegerField(choices=[(1, 'The main strengths of this course are:'), (2, 'Topics to be included/deleted in the course to make it more effective are:'), (3, "Mention one or two of the faculty's most effective practices:"), (4, 'What additional constructive feedback can you offer to the faculty which might help the effectiveness of teaching?')])),
                ('comment', models.CharField(max_length=500)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('registration_number', models.CharField(max_length=16)),
                ('course_name', models.CharField(max_length=75)),
                ('course_id', models.CharField(max_length=16)),
                ('section', models.CharField(max_length=2)),
                ('faculty_name', models.CharField(max_length=50)),
                ('faculty_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'feedback_comments',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cfid', models.IntegerField(blank=True, null=True)),
                ('value', models.CharField(max_length=50)),
                ('registration_number', models.CharField(max_length=16)),
                ('course_name', models.CharField(max_length=75)),
                ('course_id', models.CharField(max_length=16)),
                ('section', models.CharField(max_length=2)),
                ('faculty_name', models.CharField(max_length=50)),
                ('faculty_id', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'feedback',
            },
        ),
        migrations.CreateModel(
            name='FilledFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_number', models.CharField(max_length=16)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'filled_feedback',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_course', models.CharField(choices=[('L', 'Lab'), ('T', 'Theory')], max_length=1)),
                ('question_for', models.CharField(choices=[('C', 'Course'), ('F', 'Faculty')], max_length=1)),
                ('order', models.PositiveSmallIntegerField()),
                ('text', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'questions',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cfid', models.IntegerField(blank=True, null=True)),
                ('faculty_rating', models.FloatField()),
                ('course_rating', models.FloatField()),
            ],
            options={
                'db_table': 'ratings',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('registration_session', models.IntegerField()),
            ],
            options={
                'db_table': 'session',
            },
        ),
        migrations.CreateModel(
            name='UpdateSeen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', models.IntegerField()),
                ('faculty_id', models.IntegerField(blank=True, null=True)),
                ('fseen', models.BooleanField(default=False)),
                ('cseen', models.BooleanField(default=False)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedback.Session')),
            ],
            options={
                'db_table': 'update_seen',
            },
        ),
        migrations.AddField(
            model_name='rating',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedback.Session'),
        ),
        migrations.AddField(
            model_name='filledfeedback',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedback.Session'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedback.Session'),
        ),
        migrations.AddField(
            model_name='comment',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedback.Session'),
        ),
        migrations.AddField(
            model_name='allowexit',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedback.Session'),
        ),
        migrations.AddField(
            model_name='allow',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedback.Session'),
        ),
        migrations.AlterUniqueTogether(
            name='allowexit',
            unique_together={('registration_number', 'session')},
        ),
    ]
